// Generated by view binder compiler. Do not edit!
package com.ironreign.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ironreign.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOneRmCalculatorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCalculate;

  @NonNull
  public final EditText editTextReps;

  @NonNull
  public final EditText editTextWeight;

  @NonNull
  public final TextView textOneRmResult;

  private FragmentOneRmCalculatorBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnCalculate, @NonNull EditText editTextReps,
      @NonNull EditText editTextWeight, @NonNull TextView textOneRmResult) {
    this.rootView = rootView;
    this.btnCalculate = btnCalculate;
    this.editTextReps = editTextReps;
    this.editTextWeight = editTextWeight;
    this.textOneRmResult = textOneRmResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOneRmCalculatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOneRmCalculatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_one_rm_calculator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOneRmCalculatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_calculate;
      Button btnCalculate = ViewBindings.findChildViewById(rootView, id);
      if (btnCalculate == null) {
        break missingId;
      }

      id = R.id.edit_text_reps;
      EditText editTextReps = ViewBindings.findChildViewById(rootView, id);
      if (editTextReps == null) {
        break missingId;
      }

      id = R.id.edit_text_weight;
      EditText editTextWeight = ViewBindings.findChildViewById(rootView, id);
      if (editTextWeight == null) {
        break missingId;
      }

      id = R.id.text_one_rm_result;
      TextView textOneRmResult = ViewBindings.findChildViewById(rootView, id);
      if (textOneRmResult == null) {
        break missingId;
      }

      return new FragmentOneRmCalculatorBinding((LinearLayout) rootView, btnCalculate, editTextReps,
          editTextWeight, textOneRmResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
