// Generated by view binder compiler. Do not edit!
package com.ironreign.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ironreign.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExerciseDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView textEstimated1rm;

  @NonNull
  public final TextView textExerciseDetailDescription;

  @NonNull
  public final TextView textExerciseDetailName;

  @NonNull
  public final TextView textTotalVolume;

  private FragmentExerciseDetailBinding(@NonNull LinearLayout rootView,
      @NonNull TextView textEstimated1rm, @NonNull TextView textExerciseDetailDescription,
      @NonNull TextView textExerciseDetailName, @NonNull TextView textTotalVolume) {
    this.rootView = rootView;
    this.textEstimated1rm = textEstimated1rm;
    this.textExerciseDetailDescription = textExerciseDetailDescription;
    this.textExerciseDetailName = textExerciseDetailName;
    this.textTotalVolume = textTotalVolume;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExerciseDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExerciseDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_exercise_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExerciseDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_estimated_1rm;
      TextView textEstimated1rm = ViewBindings.findChildViewById(rootView, id);
      if (textEstimated1rm == null) {
        break missingId;
      }

      id = R.id.text_exercise_detail_description;
      TextView textExerciseDetailDescription = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseDetailDescription == null) {
        break missingId;
      }

      id = R.id.text_exercise_detail_name;
      TextView textExerciseDetailName = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseDetailName == null) {
        break missingId;
      }

      id = R.id.text_total_volume;
      TextView textTotalVolume = ViewBindings.findChildViewById(rootView, id);
      if (textTotalVolume == null) {
        break missingId;
      }

      return new FragmentExerciseDetailBinding((LinearLayout) rootView, textEstimated1rm,
          textExerciseDetailDescription, textExerciseDetailName, textTotalVolume);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
